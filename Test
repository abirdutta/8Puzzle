    searcher1 = Searcher(-1)
    print(searcher1)
    searcher2 = Searcher(10)
    print(searcher2)

    b1 = Board('142358607')
    s1 = State(b1, None, 'init')  # initial state
    searcher1 = Searcher(-1)  # no depth limit
    searcher1.add_state(s1)
    searcher2 = Searcher(1)   # depth limit of 1 move!
    searcher1.add_state(s1)
    b2 = b1.copy()
    print(b2.move_blank('left'))

    s2 = State(b2, s1, 'left')
    print(searcher1.should_add(s2))

    print(searcher2.should_add(s2))

    b3 = b2.copy()
    print(b3.move_blank('right'))


    print('num3')
    b = Board('142358607')
    s = State(b, None, 'init')
    searcher = Searcher(-1)
    searcher.add_state(s)
    print(searcher.states)

    succ = s.generate_successors()
    print('succ =', succ)


    print('num4')
    b = Board('142358607')
    s = State(b, None, 'init')
    searcher = Searcher(-1)
    searcher.add_state(s)
    print(searcher.states)

    succ = s.generate_successors()
    print(succ)

    print('num6')
    b = Board('012345678')       # the goal state!
    s = State(b, None, 'init')   # start at the goal
    print(s)

    searcher = Searcher(-1)
    print(searcher)

    print(searcher.find_solution(s))

    print(searcher)



    # part IV
    print('####PARTIV###')
    b = Board('142358607')       
    s = State(b, None, 'init')
    print(s)

    bfs = BFSearcher(-1)
    bfs.add_state(s)
    print(bfs.next_state())

    succ = s.generate_successors()
    print(succ)

    bfs.add_states(succ)
    print(bfs.next_state())

    print('####DFS######')
    b = Board('142358607')       
    s = State(b, None, 'init')
    print(s)

    dfs = DFSearcher(-1)
    dfs.add_state(s)
    print(dfs.next_state())

    succ = s.generate_successors()
    print(succ)

    dfs.add_states(succ)
    print(dfs.next_state())

    print('####greedy and a###')
    b = Board('142358607')       
    s = State(b, None, 'init')
    g = GreedySearcher(-1, h1)

    g.add_state(s)
    print(g.states)

    succ = s.generate_successors()
    g.add_state(succ[0])
    print(g.states)

    g.add_state(succ[1])
    print(g.states)

    print(g.next_state())
    print(g.states)


    #5
    b = Board('142358607')       
    s = State(b, None, 'init')
    a = AStarSearcher(-1, h1)  # no depth limit, basic heuristic
    a.add_state(s)
    print(a.states)

    succ = s.generate_successors()
    a.add_state(succ[1])
    print(a.states) 
    print(a.next_state)
    print(a.states)

